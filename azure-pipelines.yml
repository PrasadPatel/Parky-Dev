# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: 'Build Projects'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\ParkyAPIBuild.zip'
    zipAfterPublish: True
    projects: '**/*/ParkyAPI.csproj'
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\ParkyWebBuild.zip'
    zipAfterPublish: True
    projects: '**/*/ParkyWeb.csproj'
# Unit Testing
- task: DotNetCoreCLI@2
  displayName: 'Run Unit Tests for Parky API'
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/APIcoverage.cobertura.xml'
    publishTestResults: true
    projects: '**/*_XTest/ParkyAPI_XTest.csproj' # update with your test project directory
- task: DotNetCoreCLI@2
  displayName: 'Run Unit Tests for Parky Web'
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/Webcoverage.cobertura.xml'
    publishTestResults: true
    projects: '**/*_XTest/ParkyWeb_XTest.csproj' # update with your test project directory    
- task: reportgenerator@4
  displayName: 'Run Report Generator for ParkyAPI'  
  inputs:
    reports: '$(Build.SourcesDirectory)\TestResults\Coverage\APIcoverage.cobertura.xml'
    targetdir: '$(Build.SourcesDirectory)\coveragereport'
- task: reportgenerator@4
  displayName: 'Run Report Generator for ParkyWeb'  
  inputs:
    reports: '$(Build.SourcesDirectory)\TestResults\Coverage\Webcoverage.cobertura.xml'
    targetdir: '$(Build.SourcesDirectory)\coveragereport'
